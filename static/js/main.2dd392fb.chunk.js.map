{"version":3,"sources":["components/ListAddCard/ListAddCard.module.css","components/CardList/CardsList.module.css","components/Login/Login.module.css","components/Cards/Cards.module.css","components/BoardName/BoardName.module.css","components/Boards/Boards.module.css","components/Board/Board.module.css","store/auth/types.ts","store/auth/reducer.ts","store/boards/types.ts","store/auth/selectors.ts","store/auth/actions.ts","store/boards/reducer.ts","store/lists/types.ts","store/boards/actions.ts","store/boards/selectors.ts","store/lists/reducer.ts","store/cards/types.ts","store/cards/reducer.ts","store/cards/actions.ts","store/cards/selectors.ts","components/App/routes.tsx","components/BoardName/BoardName.tsx","components/Cards/Cards.tsx","components/ListAddCard/ListAddCard.tsx","components/CardList/CardsList.tsx","components/Board/Board.tsx","store/lists/selectors.ts","store/lists/actions.ts","components/Boards/Boards.tsx","components/Dashboard/Dashboard.tsx","components/Login/Login.tsx","components/NotFound/NotFound.tsx","components/Profile/Profile.tsx","components/Auth/Oauth.tsx","components/ProtectedRoute/ProtectedRoute.tsx","components/Header/Header.tsx","components/App/App.tsx","index.tsx","store/index.ts","components/Dashboard/Dashboard.module.css","components/Header/Header.module.css","components/Profile/Profile.module.css"],"names":["module","exports","AUTH_TYPES","ACTION_TYPES","INITIAL_STATE","token","userProfile","undefined","auth","state","action","type","SET_TOKEN","payload","SET_PROFILE","RESET_STATE","getToken","isAuthenticated","getProfile","setProfile","data","LISTS_TYPES","list","selected","boards","SET_BOARDS","SET_SELECTED","process","REACT_APP_API_DOMAIN","REACT_APP_API_KEY","makeUrl","path","authRequired","url","setBoards","getBoards","appState","CARDS_TYPES","cardLists","lists","SET_LISTS","cardItems","cards","SET_CARDS","fetchCards","boardName","dispatch","getState","a","AppState","fetch","method","headers","response","json","getCards","ROUTE_URLS","BoardName","props","useState","name","inputText","setInputText","isActive","setIsActive","useEffect","className","styles","board_name","onDoubleClick","autoFocus","onChange","e","target","value","onBlur","input","Cards","card","card_content","badges","ListAddCard","addListCard","listId","boardId","active","setActive","footer_btn","onClick","plus","disc","onSubmit","preventDefault","form","add_card","placeholder","btns_wrapp","btn_add","btn_close","CardsList","console","log","map","item","list_wrapper","list_content","list_header","dots","list_cards","filter","elem","idList","id","idBoard","list_footer","ConnectedBoard","connect","selectedBoard","setList","setCards","cardName","activeListId","activeBoardId","activeBoard","mode","body","JSON","stringify","text","fetchToAddCard","container","style","background","prefs","backgroundImage","board_header","link_item","star","join","icon_star","line","icon","span_text","wrapp_round_chevron","link_round","chevron","board_content_container","board_content","addList","Boards","items","elemLi","setBoardId","parentNode","to","BOARD","src","image","alt","Dashboard","onSelected","this","onFetchBoards","container_root","container_sticky","left_menu","navbar","tab_section","span_icon","right_menu","content","content_title","all_boards","all_boards_header","header_icon","profile","memberCreator","initials","header_title","all_boards_content","create","React","connectedDashboard","options","Accept","Login","REACT_APP_APP_NAME","REACT_APP_REDIRECT_URL","REACT_APP_SCOPE","requestUrl","login","logo_container","btn_span","btn_span_name","href","login_send","NotFound","Profile","useSelector","username","profileContainer","tabe_panel_header","tabe_panel_header_wrapper","tabe_panel_header_content","logo_wrapp","nickname_wrapp","nickname_wrapp_span1","fullName","nickname_wrapp_span2","tabe_panel_nav","tabe_panel_main","tabe_panel_main_container","image_content","color","marginBottom","hr","form_container","label","inp","submitBtn","routes","LOGIN","render","title","DASHBOARD","isProtected","PROFILE","HOME","exact","isHidden","NOT_FOUND","connectedOauth","onSetToken","setToken","onSetProfile","fetchProfile","hash","location","split","ConnectedPrivate","rest","routeComponentProps","pathname","from","Header","header","header_container","btn_menu","activeClassName","textDecoration","display","center_menu","fontSize","fontWeight","logout","logOut","btn_menu_logo","user_logo","route","i","App","redirectToLogin","renderRoute","key","history","push","OAUTH","renderContent","AppWithRouter","withRouter","ConnectedApp","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","createStore","applyMiddleware","thunk","configureStore","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.2dd392fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer_btn\":\"ListAddCard_footer_btn__1C03C\",\"plus\":\"ListAddCard_plus__2r1Lw\",\"disc\":\"ListAddCard_disc__30qAx\",\"form\":\"ListAddCard_form__2jpud\",\"add_card\":\"ListAddCard_add_card__1DSxL\",\"btns_wrapp\":\"ListAddCard_btns_wrapp__1UQ8M\",\"btn_add\":\"ListAddCard_btn_add__3JY7N\",\"btn_close\":\"ListAddCard_btn_close__UABOV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_wrapper\":\"CardsList_list_wrapper__2idlp\",\"list_content\":\"CardsList_list_content__1rhxv\",\"list_header\":\"CardsList_list_header__3Kog3\",\"dots\":\"CardsList_dots__2YXoc\",\"list_cards\":\"CardsList_list_cards__2xqWH\",\"list_footer\":\"CardsList_list_footer__2UCoB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__25J6D\",\"logo_container\":\"Login_logo_container__3v7Dm\",\"btn_span\":\"Login_btn_span__3zoJL\",\"btn_span_name\":\"Login_btn_span_name__FmTSc\",\"login_send\":\"Login_login_send__anFhZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Cards_card__249z0\",\"badges\":\"Cards_badges__3okNH\",\"card_content\":\"Cards_card_content__2ZDhF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board_name\":\"BoardName_board_name__36C6o\",\"input\":\"BoardName_input__3sKkO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"elemLi\":\"Boards_elemLi__2ZYVg\",\"image\":\"Boards_image__191G4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Board_container__2Kww9\",\"board_header\":\"Board_board_header__3mj-x\",\"link_item\":\"Board_link_item__BmPPz\",\"link_round\":\"Board_link_round__3cyjb\",\"star\":\"Board_star__3-IB3\",\"icon_start\":\"Board_icon_start__2eZb0\",\"icon\":\"Board_icon__19vdz\",\"wrapp_round_chevron\":\"Board_wrapp_round_chevron__3FQlv\",\"chevron\":\"Board_chevron__3I4kB\",\"line\":\"Board_line__1DSOE\",\"board_content_container\":\"Board_board_content_container__2XPEK\",\"board_content\":\"Board_board_content__b5G50\",\"addList\":\"Board_addList__2EutJ\",\"plus\":\"Board_plus__BAdNB\",\"text\":\"Board_text__3YW3D\"};","export enum AUTH_TYPES {\r\n    SET_TOKEN = \"@@AUTH/SET_TOKEN\",\r\n    READ_TOKEN = '@@AUTH/READ_TOKEN',\r\n    SET_PROFILE = \"@@AUTH/SET_PROFILE\",\r\n    RESET_STATE = \"@@AUTH/RESET_STATE\"\r\n}","import { AUTH_TYPES } from \"./types\";\r\n\r\nexport interface AuthState {\r\n    token: string,\r\n    userProfile: any\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n    token: '',\r\n    userProfile: undefined\r\n}\r\n\r\nconst auth = (state: AuthState = INITIAL_STATE, action: any) => {\r\n   switch (action.type) {\r\n       case AUTH_TYPES.SET_TOKEN: \r\n           return {\r\n              ...state, token: action.payload\r\n           }\r\n        case AUTH_TYPES.SET_PROFILE: \r\n           return {\r\n            ...state, userProfile: [...action.payload]\r\n           }  \r\n        case AUTH_TYPES.RESET_STATE:\r\n            return {\r\n                ...state, state: INITIAL_STATE\r\n            }\r\n       default:\r\n           return state;\r\n   }\r\n}\r\n\r\nexport default auth;\r\n\r\n","export enum ACTION_TYPES {\r\n  FETCH = '@@BOARDS/FETCH',\r\n  SET_BOARDS = '@@BOARDS/SET',\r\n  SET_SELECTED = \"@@BOARDS/SET_SELECTED\"\r\n}\r\n","import { AppState } from \"..\";\r\n\r\nexport const getToken = (state: AppState): string => state.auth.token;\r\nexport const isAuthenticated = (state: AppState) => !!state.auth.token;\r\nexport const getProfile = (state: AppState) => state.auth.userProfile;","import { AUTH_TYPES } from \"./types\"\r\n\r\nexport const setToken = (token:string) => {\r\n    return {\r\n        type: AUTH_TYPES.SET_TOKEN,\r\n        payload: token\r\n    }\r\n}\r\nexport const readToken = () => ({\r\n    type: AUTH_TYPES.READ_TOKEN\r\n  });\r\n\r\n\r\nexport const fetchProfile =  (token: string) => {\r\n  const baseUrl = 'https://api.trello.com/1/members/me/';\r\n\r\n  return async (dispatch: any) => {\r\n   const response = await fetch(\r\n    `${baseUrl}actions/?fields=avatarHash,fullName,initials,username&key=${process.env.REACT_APP_API_KEY}&token=${token}`\r\n  )\r\n   const data = await response.json();\r\n   dispatch(setProfile(data))\r\n  }\r\n}\r\n  \r\nexport const setProfile= (data: any) => ({\r\n    type: AUTH_TYPES.SET_PROFILE,\r\n    payload: data\r\n})\r\n\r\nexport const resetState = () =>({\r\n  type: AUTH_TYPES.RESET_STATE\r\n})","import { Action } from '../types';\r\nimport { ACTION_TYPES } from './types';\r\n\r\ninterface BoardsState {\r\n  list: Array<any>;\r\n  selected: string;\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  list: [],\r\n  selected: ''\r\n};\r\n\r\nconst boards = (\r\n  state: BoardsState = INITIAL_STATE,\r\n  { type, payload }: Action<any>\r\n) => {\r\n  switch (type) {\r\n    case ACTION_TYPES.SET_BOARDS:\r\n      return { ...state, list: payload };\r\n    case ACTION_TYPES.SET_SELECTED:\r\n      return {...state, selected: payload}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default boards;\r\n","export enum LISTS_TYPES {\r\n   FETCH_LISTS = \"@@LISTS/FETCH_LISTS\",\r\n   SET_LISTS = \"@@LISTS/SET_LISTS\"\r\n}","import { ACTION_TYPES } from './types';\r\nimport { getToken } from '../auth';\r\nconst { REACT_APP_API_DOMAIN, REACT_APP_API_KEY } = process.env;\r\n\r\nconst makeUrl = (path: string,  token: string, authRequired: boolean,) => {\r\n  let url = REACT_APP_API_DOMAIN + path + `key=${REACT_APP_API_KEY}`;\r\n  if (authRequired && token) {\r\n    url = url + `&token=${token}`;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\nexport const fetchBoards = () => async (dispatch: any, getState: any) => {\r\n  const appState = getState!();\r\n  const token = getToken(appState);\r\n\r\n  const options: any = {\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      // 'Content-Type': 'application/json'\r\n    }\r\n  };\r\n  const response = await fetch(\r\n    makeUrl('/1/members/me/boards?', token, true),\r\n    options\r\n  );\r\n  const data = await response.json();\r\n\r\n  dispatch(setBoards(data));\r\n};\r\n\r\nexport const setBoards = (data: Array<any>) => ({\r\n  type: ACTION_TYPES.SET_BOARDS,\r\n  payload: data\r\n});\r\nexport const setSelectedId = (data: string) => ({\r\n  type: ACTION_TYPES.SET_SELECTED,\r\n  payload: data\r\n});\r\n\r\n","import { AppState } from '..';\r\n\r\nexport const getBoards = (appState: AppState): Array<any> =>\r\n  appState.boards.list;\r\nexport const getSelectedBoard = (appState: AppState): Array<any> =>\r\n  appState.boards.selected;","import { Action } from \"../types\";\r\nimport { LISTS_TYPES } from \"./types\";\r\n\r\nexport interface ListsState {\r\n    cardLists: any\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n    cardLists: ''\r\n}\r\n\r\nconst lists = (state:ListsState = INITIAL_STATE, action: Action<any>) =>{\r\n   switch (action.type) {\r\n       case LISTS_TYPES.SET_LISTS:\r\n           return {\r\n               ...state, cardLists: action.payload\r\n           }  \r\n        default: \r\n           return state;      \r\n   }\r\n}\r\n\r\nexport default lists;","export enum CARDS_TYPES {\r\n   FETCH_CARDS = \"@@CARDS/FETCH_CARDS\",\r\n   SET_CARDS = \"@@CARDS/SET_CARDS\"\r\n}","import { Action } from \"../types\";\r\nimport { CARDS_TYPES } from \"./types\";\r\n\r\nexport interface CardsState {\r\n    cardItems: any\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n    cardItems: ''\r\n}\r\n\r\nconst cards = (state:CardsState = INITIAL_STATE, action: Action<any>) =>{\r\n   switch (action.type) {\r\n       case CARDS_TYPES.SET_CARDS:\r\n           return {\r\n               ...state, cardItems: action.payload\r\n           }  \r\n        default: \r\n           return state;      \r\n   }\r\n}\r\n\r\nexport default cards;","import { CARDS_TYPES } from \"./types\";\r\nimport { getToken } from '../auth';\r\n\r\n\r\nexport const setCards = (cards: any) =>{\r\n   return {\r\n       type: CARDS_TYPES.SET_CARDS,\r\n       payload: cards\r\n   }\r\n}\r\n\r\nexport const fetchCards = (boardName: string)=>{\r\n    const baseUrl = 'https://api.trello.com/1/';\r\n    \r\n    return async (dispatch: any, getState: any)=>{\r\n        const AppState = getState();\r\n        const token = getToken(AppState);\r\n\r\n        const response = await fetch(\r\n        `${baseUrl}boards/${boardName}/cards?key=${process.env.REACT_APP_API_KEY}&token=${token}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              }\r\n            }\r\n        )\r\n        const data = await response.json();\r\n        \r\n        dispatch(setCards(data));\r\n    }\r\n}\r\n\r\nexport const fetchToAddCard = (cardName: string, activeListId: string, activeBoard: string)=>{\r\n    const baseUrl = 'https://api.trello.com/1/';\r\n    \r\n    return async (dispatch: any, getState: any)=>{\r\n        const AppState = getState();\r\n        const token = getToken(AppState);\r\n        \r\n        const response = await fetch(\r\n            `${baseUrl}cards?key=${process.env.REACT_APP_API_KEY}&token=${token}&idList=${activeListId}&name=${cardName}`, {\r\n                method: 'POST',\r\n                mode: 'no-cors',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                  },\r\n                  body: JSON.stringify(cardName)\r\n                }\r\n            )\r\n            const data = await response.text();\r\n            console.log(data);\r\n            \r\n            fetchCards(activeBoard)\r\n    }\r\n}","import { AppState } from \"..\";\r\n\r\nexport const getCards = (AppState: AppState) => AppState.cards.cardItems;","import * as React from \"react\";\r\nimport { Redirect, RouteChildrenProps } from \"react-router\";\r\nimport { Board } from \"../Board/Board\";\r\nimport { Dashboard } from \"../Dashboard/Dashboard\";\r\nimport { Login } from \"../Login/Login\";\r\nimport { NotFound } from \"../NotFound/NotFound\";\r\nimport { Profile } from \"../Profile\";\r\n\r\nexport enum ROUTE_URLS {\r\n  HOME = \"/\",\r\n  LOGIN = \"/login\",\r\n  DASHBOARD = \"/dashboard\",\r\n  NOT_FOUND = \"/404\",\r\n  USER_PROFILE = \"/profile\",\r\n  OAUTH = \"/oauth\",\r\n  PROFILE = \"/profile\",\r\n  BOARD = \"/board\"\r\n}\r\n\r\nexport interface AppRoutes {\r\n  path: string;\r\n  render: (props: any) => any;\r\n  title?: string;\r\n  exact?: boolean;\r\n  isHidden?: boolean;\r\n  isProtected?: boolean;\r\n}\r\n\r\nexport const routes: Array<AppRoutes> = [\r\n  {\r\n    path: ROUTE_URLS.LOGIN,\r\n    render: (props: any) => <Login {...props} />,\r\n    title: \"Login\",\r\n  },\r\n  {\r\n    path: ROUTE_URLS.DASHBOARD,\r\n    render: (props: any) => <Dashboard {...props} />,\r\n    title: \"Dashboard\",\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: ROUTE_URLS.PROFILE,\r\n    render: (props: any) => <Profile {...props} />,\r\n    title: \"Profile\",\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: ROUTE_URLS.HOME,\r\n    exact: true,\r\n    isHidden: true,\r\n    render: (props: any) => <Redirect to={ROUTE_URLS.DASHBOARD} />,\r\n  },\r\n  {\r\n    path: ROUTE_URLS.NOT_FOUND,\r\n    isHidden: true,\r\n    render: (props: RouteChildrenProps) => <NotFound {...props} />,\r\n  },\r\n  {\r\n    path: ROUTE_URLS.BOARD,\r\n    render: (props: any) => <Board {...props} />,\r\n    title: \"board\",\r\n    isProtected: true,\r\n  },\r\n];\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./../BoardName/BoardName.module.css\";\r\n\r\ninterface BoardNameProps {\r\n  name: string;\r\n}\r\n\r\nexport const BoardName: React.FunctionComponent<BoardNameProps> = (props) => {\r\n  const [inputText, setInputText] = useState(props.name);\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setInputText(props.name);\r\n  }, [setInputText, props.name]);\r\n\r\n  const handleText = (e: any) => {\r\n    setInputText(e.target.value);\r\n  };\r\n  const activate = () => {\r\n    setIsActive(true);\r\n  };\r\n  const deActivate = () => {\r\n    setIsActive(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!isActive && (\r\n        <div className={styles.board_name} onDoubleClick={activate}>\r\n          {inputText}\r\n        </div>\r\n      )}\r\n      {isActive && (\r\n        <input\r\n          type=\"text\"\r\n          autoFocus\r\n          onChange={handleText}\r\n          onBlur={deActivate}\r\n          className={styles.input}\r\n          value={inputText}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport styles from \"./../Cards/Cards.module.css\";\r\n\r\ninterface CardsProps {\r\n  cards: any;\r\n}\r\n\r\nexport const Cards: React.FunctionComponent<CardsProps> = (\r\n  props: CardsProps\r\n) => {\r\n  return (\r\n    <div className={styles.card}>\r\n      <div className={styles.card_content}>{props.cards.name}</div>\r\n      <div className={styles.badges}>\r\n        <i className=\"fas fa-align-left\"></i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./../ListAddCard/ListAddCard.module.css\";\r\n\r\ninterface CreateListCard {\r\n  addListCard: (\r\n    cardName: string,\r\n    activeListId: string,\r\n    boardId: string\r\n  ) => void;\r\n  listId: string;\r\n  boardId: string;\r\n}\r\n\r\nexport const ListAddCard: React.FunctionComponent<CreateListCard> = ({\r\n  addListCard,\r\n  listId,\r\n  boardId,\r\n}: any) => {\r\n  const [active, setActive] = useState(true);\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    addListCard(inputText, listId, boardId);\r\n    setActive(true);\r\n  };\r\n  const handleChangeInput = (e: any) => {\r\n    setInputText(e.target.value);\r\n  };\r\n  const deActivate = () => {\r\n    setActive(false);\r\n  };\r\n  const activate = () => {\r\n    setActive(true);\r\n    setInputText(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {active && (\r\n        <>\r\n          <button className={styles.footer_btn} onClick={deActivate}>\r\n            <span className={styles.plus}>\r\n              <i className=\"fas fa-plus\"></i>\r\n            </span>\r\n            Добавить еще одну карточку\r\n          </button>\r\n          <span className={styles.disc}>\r\n            <i className=\"far fa-window-restore\"></i>\r\n          </span>\r\n        </>\r\n      )}\r\n\r\n      {!active && (\r\n        <form action=\"\" onSubmit={handleSubmit} className={styles.form}>\r\n          <input\r\n            type=\"text\"\r\n            className={styles.add_card}\r\n            value={inputText}\r\n            onChange={handleChangeInput}\r\n            placeholder=\"Ввести заголовок для этой карты\"\r\n          />\r\n          <div className={styles.btns_wrapp}>\r\n            <button className={styles.btn_add} type=\"submit\">\r\n              Добавить карточку\r\n            </button>\r\n            <button className={styles.btn_close} onClick={activate}>\r\n              <i className=\"fas fa-times\"></i>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport styles from \"./../CardList/CardsList.module.css\";\r\nimport { Cards } from \"./../Cards/Cards\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { ListAddCard } from \"../ListAddCard\";\r\n\r\ninterface CardsListProps {\r\n  lists: any;\r\n  cards: any;\r\n  addListCard: (\r\n    cardName: string,\r\n    activeListId: string,\r\n    activeBoard: string\r\n  ) => void;\r\n}\r\n\r\nexport const CardsList: React.FunctionComponent<any> = (\r\n  props: CardsListProps\r\n) => {\r\n  console.log(props);\r\n\r\n  return (\r\n    props.lists &&\r\n    props.lists.map((item: any) => {\r\n      return (\r\n        <div className={styles.list_wrapper}>\r\n          <div className={styles.list_content}>\r\n            <div className={styles.list_header}>\r\n              {item.name}\r\n              <span className={styles.dots}>\r\n                <i className=\"fas fa-ellipsis-h\"></i>\r\n              </span>\r\n            </div>\r\n            <div className={styles.list_cards}>\r\n              {props.cards &&\r\n                props.cards\r\n                  .filter((elem: any) => {\r\n                    return (\r\n                      elem.idList === item.id && elem.idBoard === item.idBoard\r\n                    );\r\n                  })\r\n                  .map((item: any) => {\r\n                    return <Cards cards={item} />;\r\n                  })}\r\n            </div>\r\n            <div className={styles.list_footer}>\r\n              <ListAddCard\r\n                addListCard={props.addListCard}\r\n                listId={item.id}\r\n                boardId={item.idBoard}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    })\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  AppState,\r\n  fetchCards,\r\n  getBoards,\r\n  getCards,\r\n  getSelectedBoard,\r\n  getToken,\r\n  fetchToAddCard,\r\n} from \"../../store\";\r\nimport { fetchLists, getLists } from \"../../store/lists\";\r\nimport { BoardName } from \"../BoardName\";\r\nimport styles from \"./../Board/Board.module.css\";\r\nimport { CardsList } from \"./../CardList/CardsList\";\r\n\r\ninterface BoardProps {\r\n  setList: (selectedBoard: any) => void;\r\n  setCards: (selectedBoard: any) => void;\r\n  token: string;\r\n  lists: any;\r\n  boards: any;\r\n  selectedBoard: any;\r\n  cards: any;\r\n  addListCard: (\r\n    cardName: string,\r\n    activeListId: string,\r\n    activeBoard: string\r\n  ) => void;\r\n}\r\n\r\nconst Board: React.FunctionComponent<BoardProps> = ({\r\n  setList,\r\n  setCards,\r\n  lists,\r\n  boards,\r\n  selectedBoard,\r\n  cards,\r\n  addListCard,\r\n}: BoardProps) => {\r\n  useEffect(() => {\r\n    setList(selectedBoard);\r\n  }, [selectedBoard, setList]);\r\n  useEffect(() => {\r\n    setCards(selectedBoard);\r\n  }, [selectedBoard, setCards]);\r\n\r\n  return boards.map((item: any) => {\r\n    if (item.id === selectedBoard) {\r\n      return (\r\n        <div\r\n          className={styles.container}\r\n          style={{\r\n            background: `url('${item.prefs.backgroundImage}') no-repeat center/cover`,\r\n          }}\r\n        >\r\n          <div className={styles.board_header}>\r\n            <div className={styles.link_item}>\r\n              <BoardName name={item.name} />\r\n            </div>\r\n            <div className={[styles.link_item, styles.star].join(\" \")}>\r\n              <span className={styles.icon_star}>\r\n                <i className=\"far fa-star\"></i>\r\n              </span>\r\n            </div>\r\n            <span className={styles.line}></span>\r\n            <div className={styles.link_item}>\r\n              <span className={styles.icon}>\r\n                <i className=\"fas fa-user-check\"></i>\r\n              </span>\r\n              <span className={styles.span_text}>Персональная</span>\r\n            </div>\r\n            <span className={styles.line}></span>\r\n            <div className={styles.link_item}>\r\n              <span className={styles.icon}>\r\n                <i className=\"fas fa-lock\"></i>\r\n              </span>\r\n              <span className={styles.span_text}>Приватная</span>\r\n            </div>\r\n            <span className={styles.line}></span>\r\n            <span className={styles.wrapp_round_chevron}>\r\n              <div className={styles.link_round}>S</div>\r\n              <span className={styles.chevron}>\r\n                <i className=\"fas fa-angle-double-up\"></i>\r\n              </span>\r\n            </span>\r\n            <div className={styles.link_item}>\r\n              <span className={styles.span_text}>Пригласить</span>\r\n            </div>\r\n          </div>\r\n          <div className={styles.board_content_container}>\r\n            <div className={styles.board_content}>\r\n              <CardsList\r\n                lists={lists}\r\n                cards={cards}\r\n                addListCard={addListCard}\r\n              />\r\n              <button className={styles.addList}>\r\n                <span className={styles.plus}>\r\n                  <i className=\"fas fa-plus\"></i>\r\n                </span>\r\n                <span className={styles.text}>Добавить еще одну колонку</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  });\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    token: getToken(state),\r\n    lists: getLists(state),\r\n    boards: getBoards(state),\r\n    selectedBoard: getSelectedBoard(state),\r\n    cards: getCards(state),\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    setList: (selectedBoard: string) => dispatch(fetchLists(selectedBoard)),\r\n    setCards: (selectedBoard: string) => dispatch(fetchCards(selectedBoard)),\r\n    addListCard: (\r\n      cardName: string,\r\n      activeListId: string,\r\n      activeBoardId: string\r\n    ) => dispatch(fetchToAddCard(cardName, activeListId, activeBoardId)),\r\n  };\r\n};\r\nconst ConnectedBoard = connect(mapStateToProps, mapDispatchToProps)(Board);\r\nexport { ConnectedBoard as Board };\r\n","import { AppState } from \"..\";\r\n\r\nexport const getLists = (AppState: AppState) => AppState.lists.cardLists;","import { getToken } from './../auth/selectors';\r\nimport { LISTS_TYPES } from \"./types\"\r\n\r\nexport const setLists = (lists: any) =>{\r\n   return {\r\n       type: LISTS_TYPES.SET_LISTS,\r\n       payload: lists\r\n   }\r\n}\r\n\r\nexport const fetchLists = (boardName: string)=>{\r\n    const baseUrl = 'https://api.trello.com/1/';\r\n\r\n    return async (dispatch: any, getState: any)=>{\r\n        const AppState = getState();\r\n        const token = getToken(AppState);\r\n\r\n        const response = await fetch(\r\n        `${baseUrl}boards/${boardName}/lists?key=${process.env.REACT_APP_API_KEY}&token=${token}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              }\r\n            }\r\n        )\r\n        const data = await response.json();\r\n        console.log(data);\r\n        \r\n        dispatch(setLists(data));\r\n    }\r\n}\r\n\r\n","import * as React from \"react\";\r\nimport styles from \"./../Boards/Boards.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { ROUTE_URLS } from \"../App/routes\";\r\n\r\nexport const Boards: React.FunctionComponent<any> = (props: any) => {\r\n  const item = props.items;\r\n  const selectBoardId = (e: any) => {\r\n    return props.setBoardId(e.target.parentNode.parentNode.id);\r\n  };\r\n\r\n  return (\r\n    <li className={styles.elemLi} onClick={selectBoardId} id={item.id}>\r\n      {item.name}\r\n      <NavLink to={ROUTE_URLS.BOARD}>\r\n        <img\r\n          src={item.prefs.backgroundImage}\r\n          className={styles.image}\r\n          alt=\"board\"\r\n        />\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteChildrenProps, RouterProps } from \"react-router\";\r\nimport { AppState, getProfile } from \"../../store\";\r\nimport { TestModel } from \"../../types\";\r\nimport styles from \"./Dashboard.module.css\";\r\nimport { fetchBoards, getBoards, setSelectedId } from \"../../store/boards\";\r\nimport { Boards } from \"../Boards/Boards\";\r\n\r\ninterface IDashboardProps extends TestModel {\r\n  boards: Array<any>;\r\n  profile: any;\r\n  onFetchBoards: () => void;\r\n  onSelected: (id: string) => any;\r\n}\r\n\r\nclass Dashboard extends React.Component<IDashboardProps> {\r\n  componentDidMount() {\r\n    this.props.onFetchBoards!();\r\n  }\r\n\r\n  private setBoardId = (id: string) => {\r\n    this.props.onSelected(id);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.container_root}>\r\n        <div className={styles.container_sticky}>\r\n          <div className={styles.left_menu}>\r\n            <div className={styles.navbar}>\r\n              <h1>Меню</h1>\r\n              <ul className={styles.tab_section}>\r\n                <li className={styles.item}>\r\n                  <span className={styles.span_icon}>\r\n                    <i className=\"fas fa-door-open\"></i>\r\n                  </span>\r\n                  Начало работы\r\n                </li>\r\n                <li className={styles.item}>\r\n                  <span className={styles.span_icon}>\r\n                    <i className=\"far fa-heart\"></i>\r\n                  </span>\r\n                  Важные события\r\n                </li>\r\n                <li className={styles.item}>\r\n                  <span className={styles.span_icon}>\r\n                    <i className=\"fas fa-table\"></i>\r\n                  </span>\r\n                  Таблицы\r\n                </li>\r\n                <li className={styles.item}>\r\n                  <span className={styles.span_icon}>\r\n                    <i className=\"fas fa-user-friends\"></i>\r\n                  </span>\r\n                  Участники\r\n                </li>\r\n                <li className={styles.item}>\r\n                  <span className={styles.span_icon}>\r\n                    <i className=\"fas fa-cog\"></i>\r\n                  </span>\r\n                  Настройки\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className={styles.right_menu}>\r\n            <div className={styles.content}>\r\n              <div className={styles.content_title}>\r\n                ВАШИ РАБОЧИЕ ПРОСТРАНСТВА\r\n              </div>\r\n              <div className={styles.all_boards}>\r\n                <div className={styles.all_boards_header}>\r\n                  <div className={styles.header_icon}>\r\n                    {this.props.profile\r\n                      ? this.props.profile[0].memberCreator.initials\r\n                      : \"\"}\r\n                  </div>\r\n                  <div className={styles.header_title}>Активные доски</div>\r\n                </div>\r\n                <div className={styles.all_boards_content}>\r\n                  {this.props.boards.map((item: any) => {\r\n                    return <Boards items={item} setBoardId={this.setBoardId} />;\r\n                  })}\r\n                  <div className={styles.create}>создать доску</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    boards: getBoards(state),\r\n    profile: getProfile(state),\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    onFetchBoards: () => dispatch(fetchBoards()),\r\n    onSelected: (id: string) => dispatch(setSelectedId(id)),\r\n  };\r\n};\r\n\r\nconst connectedDashboard = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\nexport { connectedDashboard as Dashboard };\r\n","import * as React from \"react\";\r\nimport styles from \"./../Login/Login.module.css\";\r\n\r\nexport class Login extends React.Component {\r\n  render() {\r\n    const {\r\n      REACT_APP_API_KEY,\r\n      REACT_APP_APP_NAME,\r\n      REACT_APP_REDIRECT_URL,\r\n      REACT_APP_SCOPE,\r\n    } = process.env;\r\n\r\n    const requestUrl = `https://trello.com/1/authorize?return_url=${REACT_APP_REDIRECT_URL}&expiration=1day&name=${REACT_APP_APP_NAME}&scope=${REACT_APP_SCOPE}&response_type=token&key=${REACT_APP_API_KEY}`;\r\n\r\n    return (\r\n      <div className={styles.login}>\r\n        <div className={styles.logo_container}>\r\n          <span className={styles.btn_span}>\r\n            <i className=\"fab fa-trello\"></i>\r\n          </span>\r\n          <span className={styles.btn_span_name}>Trello</span>\r\n        </div>\r\n        <a href={requestUrl} className={styles.login_send}>\r\n          Login with trello account\r\n        </a>\r\n        <ul>\r\n          <li>You are not Logged in!</li>\r\n          <li>Please, login</li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { RouteChildrenProps } from \"react-router\";\r\n\r\nexport const NotFound: React.FunctionComponent<RouteChildrenProps> = (\r\n  props: RouteChildrenProps\r\n) => {\r\n  return <h2>Not Found!</h2>;\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppState } from \"../../store\";\r\nimport styles from \"./../Profile/Profile.module.css\";\r\n\r\nexport const Profile: React.FunctionComponent<any> = (props: any): any => {\r\n  const userProfile = useSelector(\r\n    (state: AppState) => state.auth.userProfile[4].memberCreator\r\n  );\r\n  const [inputText, setInputText] = useState(userProfile.username);\r\n\r\n  useEffect(()=>{\r\nconsole.log('hi');\r\n\r\n\r\n  }, [userProfile]);\r\n\r\n  const handleChangeInput = (e: any) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    // fetch().then().then(() => {\r\n    //   this.props.onProfileSuccessUpdate()\r\n    // })\r\n  };\r\n\r\n  console.log(userProfile);\r\n\r\n  return (\r\n    <div className={styles.profileContainer}>\r\n      <div className={styles.tabe_panel_header}>\r\n        <div className={styles.tabe_panel_header_wrapper}>\r\n          <div className={styles.tabe_panel_header_content}>\r\n            <div className={styles.logo_wrapp}>{userProfile.initials}</div>\r\n            <div className={styles.nickname_wrapp}>\r\n              <span className={styles.nickname_wrapp_span1}>\r\n                {userProfile.fullName}\r\n              </span>\r\n              <span className={styles.nickname_wrapp_span2}>\r\n                {\"@\" + userProfile.username}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.tabe_panel_nav}></div>\r\n      <div className={styles.tabe_panel_main}>\r\n        <div className={styles.tabe_panel_main_container}>\r\n          <img\r\n            src=\"https://a.trellocdn.com/prgb/dist/images/member-home/taco-privacy.eff3d701a9c3a71105ea.svg\"\r\n            alt=\"picture1\"\r\n            className={styles.image_content}\r\n          />\r\n          <h3\r\n            style={{\r\n              color: \"#172B4D\",\r\n              marginBottom: 0,\r\n            }}\r\n          >\r\n            О нас\r\n          </h3>\r\n          <hr className={styles.hr} />\r\n          <form onSubmit={handleSubmit} className={styles.form_container}>\r\n            <label className={styles.label}>\r\n              Имя пользователя:\r\n              <input\r\n                type=\"text\"\r\n                value={inputText}\r\n                onChange={handleChangeInput}\r\n                className={styles.inp}\r\n              />\r\n            </label>\r\n            <label className={styles.label}>\r\n              О себе:\r\n              <textarea\r\n                // value={this.state.value}\r\n                // onChange={this.handleChangeTextarea}\r\n                className={styles.inp}\r\n              />\r\n            </label>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Отправить\"\r\n              className={styles.submitBtn}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { FunctionComponent, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, RouteChildrenProps } from \"react-router\";\r\nimport { getToken } from \"../../store/auth\";\r\nimport { setToLocalStorage } from \"../../utils\";\r\nimport { ROUTE_URLS } from \"../App/routes\";\r\nimport { setToken, fetchProfile } from \"./../../store/auth\";\r\n\r\ninterface OauthProps extends RouteChildrenProps {\r\n  onSetToken?: (token: string) => void;\r\n  onSetProfile?: (token: string) => void;\r\n}\r\n\r\nconst Oauth: FunctionComponent<OauthProps> = ({\r\n  location: { hash },\r\n  onSetToken,\r\n  onSetProfile,\r\n}: OauthProps) => {\r\n  const token = hash.split(\"=\")[1];\r\n\r\n  useEffect(() => onSetToken && onSetToken(token));\r\n  useEffect(() => onSetProfile && onSetProfile(token));\r\n\r\n  return <Redirect to={ROUTE_URLS.DASHBOARD} />;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    onSetToken: (token: string) => dispatch(setToken(token)),\r\n    onSetProfile: (token: string) => dispatch(fetchProfile(token)),\r\n  };\r\n};\r\n\r\nconst connectedOauth = connect(undefined, mapDispatchToProps)(Oauth);\r\n\r\nexport { connectedOauth as Oauth };\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteProps, Redirect, Route, RouteComponentProps } from \"react-router\";\r\nimport { isAuthenticated } from \"../../store\";\r\n\r\ninterface PrivateProps extends RouteProps {\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nconst PrivateRoute: FunctionComponent<PrivateProps> = ({\r\n  render,\r\n  isAuthenticated,\r\n  ...rest\r\n}: PrivateProps) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeComponentProps: RouteComponentProps) =>\r\n        isAuthenticated ? (\r\n          render!(routeComponentProps)\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: routeComponentProps.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    isAuthenticated: isAuthenticated(state),\r\n  };\r\n};\r\n\r\nconst ConnectedPrivate = connect(mapStateToProps)(PrivateRoute);\r\nexport { ConnectedPrivate as PrivateRoute };\r\n","import * as React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { AppState } from \"../../store\";\r\nimport { ROUTE_URLS } from \"../App/routes\";\r\nimport { AppRoutes } from \"../App/routes\";\r\nimport { routes } from \"../App/routes\";\r\nimport styles from \"./../Header/Header.module.css\";\r\n\r\nexport const Header = (props: any) => {\r\n  const userProfile = useSelector((state: AppState) => {\r\n    return state.auth.userProfile\r\n      ? state.auth.userProfile[0].memberCreator\r\n      : undefined;\r\n  });\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.header_container}>\r\n        <div className={styles.left_menu}>\r\n          <div className={styles.btn_menu}>\r\n            <NavLink\r\n              to=\"/\"\r\n              activeClassName={styles.active}\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <span className={styles.btn_span}>\r\n                <i className=\"fas fa-th\"></i>\r\n              </span>\r\n            </NavLink>\r\n          </div>\r\n          <div className={styles.btn_menu}>\r\n            <NavLink\r\n              to={ROUTE_URLS.LOGIN}\r\n              activeClassName={styles.active}\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <span className={styles.btn_span}>\r\n                <i className=\"fas fa-home\"></i>\r\n              </span>\r\n            </NavLink>\r\n          </div>\r\n          <div className={styles.btn_menu}>\r\n            <NavLink\r\n              to={ROUTE_URLS.DASHBOARD}\r\n              activeClassName={styles.active}\r\n              style={{ display: \"flex\", textDecoration: \"none\" }}\r\n            >\r\n              <span className={styles.btn_span}>\r\n                <i className=\"fab fa-trello\"></i>\r\n              </span>\r\n              <span className={styles.btn_span_name}>Доски</span>\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n        <div className={styles.center_menu}>\r\n          <NavLink\r\n            to={ROUTE_URLS.HOME}\r\n            activeClassName={styles.active}\r\n            style={{\r\n              display: \"flex\",\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            <span className={styles.btn_span} style={{ color: \"#80B4D3\" }}>\r\n              <i className=\"fab fa-trello\"></i>\r\n            </span>\r\n            <span\r\n              className={styles.btn_span_name}\r\n              style={{\r\n                fontSize: \"20px\",\r\n                fontWeight: \"bold\",\r\n                color: \"#80B4D3\",\r\n              }}\r\n            >\r\n              Trello\r\n            </span>\r\n          </NavLink>\r\n        </div>\r\n        <div className={styles.right_menu}>\r\n          {userProfile ? (\r\n            <button className={styles.logout} onClick={props.logOut}>\r\n              Выйти\r\n            </button>\r\n          ) : null}\r\n          <div className={styles.btn_menu_logo}>\r\n            <NavLink\r\n              to={ROUTE_URLS.PROFILE}\r\n              activeClassName={styles.active}\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <span className={styles.user_logo}>\r\n                {userProfile ? userProfile.initials : \"-\"}\r\n              </span>\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {routes.map((route: AppRoutes, i: number) =>\r\n        route.isHidden ? null : (\r\n          <Link key={i} to={route.path}>\r\n            {route.title}\r\n          </Link>\r\n        )\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { setToLocalStorage, getFromLocalStorage } from \"../../utils\";\r\nimport {\r\n  NavLink,\r\n  Link,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  RouteComponentProps,\r\n  RouteChildrenProps,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport { Dashboard } from \"../Dashboard/Dashboard\";\r\nimport { Login } from \"../Login/Login\";\r\nimport { routes, AppRoutes, ROUTE_URLS } from \"./routes\";\r\nimport { Oauth } from \"../Auth/Oauth\";\r\nimport { PrivateRoute } from \"../ProtectedRoute\";\r\nimport styles from \"./../App/App.module.css\";\r\nimport { Header } from \"../Header/Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { resetState } from \"../../store\";\r\n\r\nclass App extends React.Component<any> {\r\n  redirectToLogin() {\r\n    this.props.history.push(ROUTE_URLS.LOGIN);\r\n  }\r\n\r\n  redirectToDashboard() {\r\n    this.props.history.push(ROUTE_URLS.DASHBOARD);\r\n  }\r\n\r\n  private logOut = () => {\r\n    this.redirectToLogin();\r\n  };\r\n\r\n  private renderContent() {\r\n    return (\r\n      <main>\r\n        <Switch>\r\n          {routes.map(this.renderRoute)}\r\n          <Route\r\n            path={ROUTE_URLS.OAUTH}\r\n            render={(props: RouteChildrenProps) => <Oauth {...props} />}\r\n          />\r\n          <Redirect to={ROUTE_URLS.NOT_FOUND} />\r\n        </Switch>\r\n      </main>\r\n    );\r\n  }\r\n  private renderRoute = (route: any, i: number) => {\r\n    if (route.isProtected) {\r\n      return <PrivateRoute {...route} key={i} render={() => route.render()} />;\r\n    } else {\r\n      return (\r\n        <Route\r\n          key={i}\r\n          exact={route.exact}\r\n          path={route.path}\r\n          render={(props) =>\r\n            route.render({\r\n              ...props,\r\n            })\r\n          }\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <Header logOut={this.logOut} />\r\n        {this.renderContent()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToDispatch = (dispatch: any) => {\r\n  return {\r\n    logOut: () => dispatch(resetState()),\r\n  };\r\n};\r\n\r\nconst AppWithRouter = withRouter(App);\r\nconst ConnectedApp = connect(undefined, mapStateToDispatch)(AppWithRouter);\r\nexport { ConnectedApp as App };\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { App } from \"./components/App/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport configureStore from \"./store\";\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n","import { applyMiddleware, createStore, compose, combineReducers } from \"redux\";\r\nimport { AuthState } from \"./auth\";\r\nimport auth from './auth'\r\nimport boards from \"./boards\";\r\nimport lists, { ListsState } from \"./lists\";\r\nimport thunk from 'redux-thunk'\r\nimport cards, { CardsState } from \"./cards\";\r\n\r\nexport interface AppState {\r\n   auth: AuthState,\r\n   boards: any,\r\n   lists: ListsState,\r\n   cards: CardsState\r\n}\r\n\r\nexport default function configureStore (){\r\n    const composeEnhancers =\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    \r\n    const rootReducer = combineReducers<AppState>({auth, boards, lists, cards})\r\n    \r\n    return createStore(rootReducer, undefined, composeEnhancers(applyMiddleware(thunk)))\r\n}\r\n\r\nexport * from './auth';\r\nexport * from './boards';\r\nexport * from './lists';\r\nexport * from './cards';\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_root\":\"Dashboard_container_root__oL_yB\",\"container_sticky\":\"Dashboard_container_sticky__3LS-U\",\"left_menu\":\"Dashboard_left_menu__1Igzt\",\"navbar\":\"Dashboard_navbar__1htv9\",\"tab_section\":\"Dashboard_tab_section__8l5ko\",\"span_icon\":\"Dashboard_span_icon__VZmkx\",\"item\":\"Dashboard_item__1Z3OR\",\"right_menu\":\"Dashboard_right_menu__1KoxW\",\"content\":\"Dashboard_content__3F-02\",\"content_title\":\"Dashboard_content_title__aeOlF\",\"all_boards\":\"Dashboard_all_boards__w5Kih\",\"all_boards_header\":\"Dashboard_all_boards_header__MStap\",\"header_icon\":\"Dashboard_header_icon__7DFh7\",\"header_title\":\"Dashboard_header_title__3WVmd\",\"all_boards_content\":\"Dashboard_all_boards_content__23EID\",\"create\":\"Dashboard_create__3CtYK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3N8j3\",\"header_container\":\"Header_header_container__1ro8a\",\"left_menu\":\"Header_left_menu__2gg1H\",\"center_menu\":\"Header_center_menu__1CIUY\",\"right_menu\":\"Header_right_menu__1OI-K\",\"btn_menu\":\"Header_btn_menu__27jXd\",\"btn_span\":\"Header_btn_span__3kfp0\",\"btn_span_name\":\"Header_btn_span_name__1Xwm9\",\"btn_menu_logo\":\"Header_btn_menu_logo__1K9If\",\"user_logo\":\"Header_user_logo__DEF9j\",\"logout\":\"Header_logout__1JB2V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__37KhW\",\"tabe_panel_header\":\"Profile_tabe_panel_header__2AwPP\",\"tabe_panel_header_wrapper\":\"Profile_tabe_panel_header_wrapper__WYKqH\",\"tabe_panel_header_content\":\"Profile_tabe_panel_header_content__2qlWI\",\"logo_wrapp\":\"Profile_logo_wrapp__1lCxW\",\"nickname_wrapp\":\"Profile_nickname_wrapp__2TA5O\",\"nickname_wrapp_span1\":\"Profile_nickname_wrapp_span1__1kpHO\",\"nickname_wrapp_span2\":\"Profile_nickname_wrapp_span2__3u7f3\",\"tabe_panel_main\":\"Profile_tabe_panel_main__2flh7\",\"tabe_panel_main_container\":\"Profile_tabe_panel_main_container__3lqWx\",\"image_content\":\"Profile_image_content__2gzpr\",\"hr\":\"Profile_hr__2N96t\",\"form_container\":\"Profile_form_container__1hUzE\",\"label\":\"Profile_label__1oDoR\",\"inp\":\"Profile_inp__36maA\",\"submitBtn\":\"Profile_submitBtn__3qEhe\"};"],"sourceRoot":""}